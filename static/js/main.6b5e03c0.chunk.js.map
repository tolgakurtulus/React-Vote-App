{"version":3,"sources":["components/FormVal.jsx","components/Vote.jsx","components/VoteList.jsx","components/SubmitLink.jsx","components/ReturnForm.jsx","App.jsx","index.js"],"names":["FormVal","setInputText","setInputLink","todos","setTodos","inputText","inputLink","useState","validated","setValidated","Form","noValidate","Row","Group","as","Col","md","controlId","Label","className","Control","required","type","placeholder","value","onChange","e","target","Feedback","Button","onClick","currentTarget","checkValidity","preventDefault","stopPropagation","text","link","completed","id","Math","random","score","index","Vote","todo","count","setCount","isShown","setIsShown","showModal","setShow","handleClose","useEffect","increase","decrease","map","item","onMouseEnter","onMouseLeave","contenteditable","onBlur","event","countContent","Number","textContent","isNaN","floor","Modal","show","onHide","Header","closeButton","Title","Body","Footer","variant","filter","el","VoteList","filteredTodos","pagesVisited","usersPerPage","slice","ReturnForm","href","SubmitLink","App","activePage","status","setStatus","setFilteredTodos","pageNumber","setPageNumber","paginationEmptyControlVal","setpaginationEmptyControlVal","pageCount","ceil","length","getLocalTodos","filterHandler","saveLocalTodos","voteSort","paginationEmptyControl","filterHandlerTest","sort","a","b","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","exact","path","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b5e03c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\n\r\nconst FormVal = ({ setInputText, setInputLink, todos, setTodos, inputText, inputLink }) => {\r\n  \r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const inputLinkHandler = (e) => {\r\n    setInputLink(e.target.value);\r\n  };\r\n\r\n  const submitTodoHandler = (e) => {\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n\r\n    if (!(inputText === \"\" && inputLink === \"\")) {\r\n      e.preventDefault();\r\n      setTodos([\r\n        ...todos,\r\n        {\r\n          text: inputText,\r\n          link: inputLink,\r\n          completed: false,\r\n          id: Math.random() * 100,\r\n          score: 0,\r\n          index: 0,\r\n        },\r\n      ]);\r\n      setInputText(\"\");\r\n      setInputLink(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form noValidate validated={validated}>\r\n      <Form.Row>\r\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\r\n          <Form.Label className=\"text-light\">Link Name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Link Name\"\r\n            value={inputText}\r\n            onChange={inputTextHandler}\r\n          />\r\n          <Form.Control.Feedback>Success !</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\r\n          <Form.Label className=\"text-light\">Link Url</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Link Url\"\r\n            value={inputLink}\r\n            onChange={inputLinkHandler}\r\n          />\r\n          <Form.Control.Feedback>Success !</Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Button\r\n        onClick={submitTodoHandler}\r\n        className=\"btn btn-dark\"\r\n        type=\"button\"\r\n      >\r\n        Add Link\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormVal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst Vote = ({ text, link, score, todo, todos, setTodos }) => {\r\n  let [count, setCount] = useState(score);\r\n  const [isShown, setIsShown] = useState(\"false\");\r\n  const [showModal, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    increase();\r\n    decrease();\r\n  }, []);\r\n\r\n  const increase = () => {\r\n    setCount((count = count + 1));\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            score: count,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const decrease = () => {\r\n    setCount((count = count - 1));\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            score: count,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const onCountEdit = (event) => {\r\n    let countContent = Number(event.target.textContent);\r\n    if (Number.isNaN(countContent)) setCount(Math.floor(Math.random() * 10));\r\n    else setCount(countContent);\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      onMouseEnter={() => setIsShown(\"true\")}\r\n      onMouseLeave={() => setIsShown(\"false\")}\r\n    >\r\n      <div className=\"box row\">\r\n        <div className=\"box-left col-4\">\r\n          <h2>\r\n            <span className=\"count\" contenteditable=\"true\" onBlur={onCountEdit}>\r\n              {score}\r\n            </span>{\" \"}\r\n            Points\r\n          </h2>\r\n        </div>\r\n        <div className=\"box-right col-8\">\r\n          <button\r\n            onClick={handleShow}\r\n            className={`trash-btn btn btn-danger close-button ${isShown}`}\r\n          >\r\n            <i className=\"fas fa-trash\"></i>\r\n          </button>\r\n          <div className=\"box-title\">\r\n            <p>{text}</p>\r\n          </div>\r\n          <div className=\"box-link\">\r\n            <p>{link}</p>\r\n          </div>\r\n          <div className=\"box-vote\">\r\n            <div className=\"count-wrapper\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                onClick={decrease}\r\n              >\r\n                ↓ Down Vote\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                onClick={increase}\r\n              >\r\n                ↑ Up Vote\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Do you want to remove ? </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{text}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={deleteHandler}>\r\n            Ok\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vote;\r\n","import React from 'react';\r\nimport Vote from \"./Vote\"\r\n\r\n\r\nconst VoteList = ({ todos, setTodos, filteredTodos, pagesVisited, usersPerPage }) => {\r\n    return (\r\n        <div className=\"c-todo-container\">\r\n            <ul className=\"c-todo-list list-group\">\r\n                {filteredTodos\r\n                .slice(pagesVisited, pagesVisited + usersPerPage)\r\n                .map((todo, index) => (\r\n                    <Vote\r\n                        setTodos={setTodos}\r\n                        todos={todos}\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        text={todo.text}\r\n                        link={todo.link}\r\n                        score={todo.score}\r\n                        index={index}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VoteList;","import React from \"react\";\r\n\r\nconst ReturnForm = () => {\r\n  return (\r\n    <a className=\"container mb-5 mt-5\" href=\"form\">\r\n      <div className=\"box row\">\r\n        <div className=\"box-left col-4\">\r\n          <h2>\r\n            <i className=\"fas fa-plus\"></i>\r\n          </h2>\r\n        </div>\r\n        <div className=\"box-right col-8\">\r\n          <h2>SUBMIT A LINK</h2>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default ReturnForm;\r\n","import React from \"react\";\r\n\r\nconst SubmitLink = () => {\r\n  return (\r\n    <a className=\"container mb-5 mt-5 text-light\" href=\"/\">\r\n      <h6>← Return to List</h6>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default SubmitLink;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.scss\";\r\nimport FormVal from \"./components/FormVal\";\r\nimport VoteList from \"./components/VoteList\";\r\nimport SubmitLink from \"./components/SubmitLink\";\r\nimport ReturnForm from \"./components/ReturnForm\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [inputLink, setInputLink] = useState(\"\");\r\n  const [activePage, setActivePage] = useState(\"1\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [paginationEmptyControlVal, setpaginationEmptyControlVal] = useState(\"false\");\r\n  const usersPerPage = 4;\r\n  const pagesVisited = pageNumber * usersPerPage;\r\n  const pageCount = Math.ceil(todos.length / usersPerPage);\r\n\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    filterHandler();\r\n    saveLocalTodos();\r\n    voteSort();\r\n    paginationEmptyControl();\r\n  }, [todos, status]);\r\n\r\n  useEffect(() => {\r\n    filterHandlerTest();\r\n  }, [activePage]);\r\n\r\n  const voteSort = () => {\r\n    setFilteredTodos(todos.sort((a, b) => b.score - a.score));\r\n  };\r\n\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case \"all\":\r\n        setFilteredTodos(todos.sort((a, b) => (b.score > a.score ? 1 : -1)));\r\n        break;\r\n      case \"atoz\":\r\n        setFilteredTodos(todos.sort((a, b) => (a.text < b.text ? 1 : -1)));\r\n        break;\r\n      case \"ztoa\":\r\n        setFilteredTodos(todos.sort((a, b) => (b.text < a.text ? 1 : -1)));\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const filterHandlerTest = () => {\r\n    setFilteredTodos(todos.filter((todo) => todo.completed === true));\r\n  };\r\n\r\n  // Save to Local\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  };\r\n\r\n  // Get to Local\r\n  const getLocalTodos = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(todoLocal);\r\n    }\r\n  };\r\n\r\n  const paginationEmptyControl = () => {\r\n    if (todos.length !== 0) {\r\n      setpaginationEmptyControlVal(\"true\");\r\n    } else {\r\n      setpaginationEmptyControlVal(\"false\", todos);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App c-app\">\r\n      <header>\r\n        <h1>Vote App 1</h1>\r\n      </header>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/form\">\r\n            <ReturnForm />\r\n            <FormVal\r\n              inputText={inputText}\r\n              inputLink={inputLink}\r\n              todos={todos}\r\n              setTodos={setTodos}\r\n              setInputText={setInputText}\r\n              setInputLink={setInputLink}\r\n              setStatus={setStatus}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <SubmitLink />\r\n            <VoteList\r\n              filteredTodos={filteredTodos}\r\n              setTodos={setTodos}\r\n              todos={todos}\r\n              pagesVisited={pagesVisited}\r\n              usersPerPage={usersPerPage}\r\n            />\r\n            <ReactPaginate\r\n              // className={}\r\n              previousLabel={\"<\"}\r\n              nextLabel={\">\"}\r\n              pageCount={pageCount}\r\n              onPageChange={changePage}\r\n              containerClassName={`paginationBttns ${paginationEmptyControlVal}`}\r\n              previousLinkClassName={\"previousBttn\"}\r\n              nextLinkClassName={\"nextBttn\"}\r\n              disabledClassName={\"paginationDisabled\"}\r\n              activeClassName={\"paginationActive\"}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <HashRouter> */}\r\n      <App />\r\n    {/* </HashRouter>     */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}